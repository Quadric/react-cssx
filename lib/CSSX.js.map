{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 07f13ea3841deb5eb3e8","webpack:///./src/CSSX.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,gBAAe,sBAAsB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gCAA+B,WAAW;;AAE1C,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA","file":"CSSX.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 07f13ea3841deb5eb3e8\n **/","import React, { Children, PropTypes } from 'react';\nimport 'cssx';\n\nvar ids = 0;\nvar getID = function (prefix) {\n  return prefix + '-' + (++ids);\n};\n\nexport default class CSSX extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let sheet = cssx(getID('cssx-styles'));\n    let cssScopeId = getID('cssx-el');\n\n    sheet.scope(`[data-cssx='${cssScopeId}']`);\n\n    this.state = { sheet, cssScopeId };\n  }\n  componentWillUnmount() {\n    this.state.sheet.destroy();\n  }\n  render() {\n    this.state.sheet.add(this.props.styles);\n\n    return Children.map(this.props.children, (child) => {\n      return React.cloneElement(child, {\n        'data-cssx': this.state.cssScopeId,\n      });\n    });\n  }\n};\n\nCSSX.propTypes = {\n  styles: PropTypes.object.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/CSSX.jsx\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}